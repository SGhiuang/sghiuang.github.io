<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>物理学实验计算器</title>
    <style>
        :root {
            --primary-color: #3498db;
            --text-color: #2c3e50;
        }

        h1 {
            color: var(--text-color);
            text-align: center;
            margin: 20px 0;
            font-size: 1.8rem;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
            padding: 0 10px;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            margin: 0;
            padding: 15px;
            background-color: #f5f7f9;
            min-height: 100vh;
        }

        .selector-container {
            margin: 15px 0;
            padding: 12px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }

        label {
            display: block;
            font-weight: 500;
            color: var(--text-color);
            margin-bottom: 8px;
            font-size: 0.95rem;
        }

        select {
            width: 100%;
            padding: 12px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 1rem;
            background: #f8f9fa;
            -webkit-appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%236b6b6b' stroke-width='2'%3e%3cpolyline points='6 9 12 15 18 9'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 12px center;
            background-size: 18px;
        }

        button {
            width: 100%;
            padding: 16px;
            margin: 20px 0;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 500;
            transition: all 0.2s ease;
            transition: all 0.3s ease;
            transform-origin: center;
            box-shadow: 0 2px 6px rgba(0,0,0,0.1);
        
            transition-property: transform, box-shadow, background-color;
        }

        button:hover {
            transform: scale(1);
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            background-color: #2980b9;
        }

        button:active {
            transform: scale(0.98);
            background-color: #2980b9;
        }

        @media (min-width: 768px) {
            body {
                padding: 30px;
                max-width: 500px;
                margin: 0 auto;
            }
            h1 {
                font-size: 2.2rem;
            }
        }
    </style>
</head>
<body>
    <h1>物理学实验计算器</h1>

    <div class="selector-container">
        <label>实验课程</label>
        <select id="courseSelect"></select>
    </div>

    <div class="selector-container">
        <label>实验项目</label>
        <select id="experimentSelect"></select>
    </div>

    <button onclick="navigateToExperiment()">进入实验</button>

    <script>
        let courses = [];

        // 加载实验数据
        async function loadCourses() {
            try {
                const response = await fetch('experiments.json');
                if (!response.ok) throw new Error('数据加载失败');
                const data = await response.json();
                courses = data.courses;
                initCourseSelect();
            } catch (error) {
                console.error('加载失败:', error);
                alert('实验数据加载失败，请刷新重试');
            }
        }

        // 初始化课程选择
        function initCourseSelect() {
            const select = document.getElementById('courseSelect');
            select.innerHTML = courses.map(course => 
                `<option value="${course.id}">${course.name}</option>`
            ).join('');
            updateExperimentSelect();
        }

        // 更新实验项目
        function updateExperimentSelect() {
            const courseId = document.getElementById('courseSelect').value;
            const course = courses.find(c => c.id === courseId);
            const expSelect = document.getElementById('experimentSelect');
            
            expSelect.innerHTML = course.experiments.map(exp => 
                `<option value="${course.path}/exp${exp.id}">
                    实验${exp.id}：${exp.title}
                </option>`
            ).join('');
        }

        // 修改后的跳转功能（添加页面检测）
        async function navigateToExperiment() {
            const path = document.getElementById('experimentSelect').value;
            if (!path) {
                alert('请先选择实验项目');
                return;
            }

            try {
                // 添加页面存在性检测
                const response = await fetch(`${path}.html?_=${Date.now()}`);
                if (!response.ok) throw new Error('页面不存在');
                
                // 实际跳转
                window.location.href = `${path}.html`;
            } catch (error) {
                console.error('跳转失败:', error);
                // 重定向到错误页面
                window.location.href = 'error.html';
            }
        }

        // 初始化
        document.getElementById('courseSelect').addEventListener('change', updateExperimentSelect);
        loadCourses();
    </script>
</body>
</html>
